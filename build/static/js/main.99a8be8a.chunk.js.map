{"version":3,"sources":["components/SchoolList.jsx","components/CreateSchool.jsx","components/EditSchool.jsx","components/NavLinks.jsx","components/CreateSchoolDetail.jsx","App.js","reportWebVitals.js","index.js"],"names":["SchoolList","useState","dataList","setDataList","useEffect","GetDataHandler","Axios","get","then","response","data","className","style","textAlign","colSpan","map","val","key","PK_School_ID","V_School_Name","V_School_Address","N_School_Pincode","N_School_Telephone_Number","N_School_Mobile_Number","V_School_Contact_Person","to","onClick","id","window","confirm","delete","res","alert","CreateSchool","useForm","register","handleSubmit","errors","formState","history","useHistory","name","setName","address","setAddress","pincode","setPincode","telephone","setTelephone","mobile","setMobile","contactPerson","setContactPerson","length","console","log","V_PostOffice_State","V_PostOffice_Country","onSubmit","SchoolData","trim","post","replace","value","type","placeholder","required","pattern","message","onChange","event","target","Schoolname","Address","maxLength","minLength","Pincode","Telephone","Mobile","Conatactperson","EditSchool","useParams","isName","setIsName","isAddress","setIsAddress","isPincode","setIsPincode","isTelephone","setIsTelephone","isMobile","setIsMobile","isContactPerson","setIsContactPerson","isEmpty","defaultValues","String","put","Contactperson","NavLinks","exact","CreateSchoolDetail","schoolName","setSchoolName","country","setCountry","state","setState","city","setCity","preventDefault","disabled","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99a8be8a.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SchoolList = () => {\r\n  const [dataList, setDataList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    GetDataHandler();\r\n  }, []);\r\n\r\n  const GetDataHandler = () => {\r\n    Axios.get(\"https://school-management-free-app.herokuapp.com/getdata\").then((response) => {\r\n      setDataList(response.data);\r\n    });\r\n  };\r\n\r\n  const DeleteDataHandler = (id) => {\r\n    let x = window.confirm(\"Are you Sure you want to delete\");\r\n    if (x === true) {\r\n      Axios.delete(\"https://school-management-free-app.herokuapp.com/datadelete/\" + id).then((res) => {\r\n        GetDataHandler();\r\n      });\r\n    } else {\r\n      alert(\"Cancelled\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"mb-5\" style={{ textAlign: \"center\" }}>\r\n        School List DATA\r\n      </h2>\r\n      <div className=\"container-fluid\">\r\n        <table className=\"table  table-bordered \">\r\n          <thead>\r\n            <tr className=\"text-center\">\r\n              <th>School ID</th>\r\n              <th>School Name</th>\r\n              <th>School Address</th>\r\n              <th>Pincode</th>\r\n              <th>Telephone Number</th>\r\n              <th>Mobile Number</th>\r\n              <th>Contact Person</th>\r\n              <th colSpan=\"2\">Operation</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody className=\"text-center\">\r\n            {dataList.map((val, key) => {\r\n              return (\r\n                <tr key={key}>\r\n                  <th>{val.PK_School_ID}</th>\r\n                  <td>{val.V_School_Name} </td>\r\n                  <td>{val.V_School_Address} </td>\r\n                  <td>{val.N_School_Pincode} </td>\r\n                  <td>{val.N_School_Telephone_Number} </td>\r\n                  <td>{val.N_School_Mobile_Number} </td>\r\n                  <td>{val.V_School_Contact_Person} </td>\r\n\r\n                  <td>\r\n                    <Link\r\n                      className=\"btn btn-outline-primary\"\r\n                      to={`/editschool/${val.PK_School_ID}`}\r\n                    >\r\n                      EDIT\r\n                    </Link>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <button\r\n                      onClick={() => DeleteDataHandler(val.PK_School_ID)}\r\n                      className=\"btn btn-outline-danger\"\r\n                    >\r\n                      DELETE\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SchoolList;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nconst CreateSchool = () => {\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n\r\n  \r\n\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [pincode, setPincode] = useState(\"\");\r\n  const [telephone, setTelephone] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [contactPerson, setContactPerson] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n\r\n    if(pincode.length === 6){\r\n\r\n      console.log(pincode)\r\n\r\n      Axios.get(\"https://school-management-free-app.herokuapp.com/pincode/\" + pincode).then(\r\n      (response) => {\r\n        console.log(response.data)\r\n        console.log(response.data.V_PostOffice_State)\r\n        console.log(response.data.V_PostOffice_Country)\r\n        \r\n      }\r\n    );\r\n    \r\n    }\r\n\r\n  }, [pincode]);\r\n\r\n  const FormSubmitHandler = () => {\r\n\r\n    const SchoolData = {\r\n      V_School_Name: name,\r\n      V_School_Address: address,\r\n      N_School_Pincode: pincode,\r\n      N_School_Telephone_Number: telephone,\r\n      N_School_Mobile_Number: mobile,\r\n      V_School_Contact_Person: contactPerson,\r\n    };\r\n\r\n    const isNotEmpty = (value) => value.trim() !== '';\r\n\r\n    console.log(isNotEmpty(\"sajsajs\"))\r\n\r\n    Axios.post(\"https://school-management-free-app.herokuapp.com/postdata\", SchoolData).then(\r\n      (response) => {\r\n        history.replace(\"/\");\r\n      }\r\n    );\r\n    \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n          \r\n          <div className=\"col-md-6\">\r\n            <h2 style={{ textAlign: \"center\" }}>INSERT DATA</h2>\r\n\r\n            <form onSubmit={handleSubmit(FormSubmitHandler)}>\r\n\r\n            <div className=\"mt-3\">\r\n              <label className=\"form-label\">School Name</label>\r\n\r\n              <input\r\n                value={name}\r\n                type=\"text\"\r\n                className=\"form-control \"\r\n                placeholder=\"School Name\"\r\n                {...register(\"Schoolname\", {\r\n                  required: true,\r\n                  pattern: {\r\n                    value: /^[A-Za-z\\s]+$/i,\r\n                    message: \"this should be in string format\",\r\n                  },\r\n                })}\r\n                onChange={(event) => {\r\n                  setName(event.target.value.replace(/[^A-Za-z\\s]/g, \"\"));\r\n                }}\r\n              />\r\n\r\n              <div className=\"form-text text-danger\">\r\n                {errors.Schoolname && (\r\n                  <span>{errors.Schoolname.message}</span>\r\n                )}\r\n\r\n                {errors.Schoolname?.type === \"required\" &&\r\n                  \"This field is required\"}\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"mb-3 mt-4\">\r\n              <label className=\"form-label\">School Address</label>\r\n\r\n              <input\r\n                value={address}\r\n                type=\"text\"\r\n                className=\"form-control \"\r\n                placeholder=\"address\"\r\n                {...register(\"Address\", {\r\n                  required: true,\r\n                  pattern: {\r\n                    value: /^[#.0-9a-zA-Z\\s,-]+$/,\r\n                    message: \"this should be in string format\",\r\n                  },\r\n                })}\r\n                onChange={(event) => {\r\n                  setAddress(event.target.value);\r\n                }}\r\n              />\r\n\r\n              <div className=\"form-text text-danger\">\r\n                {errors.Address?.type === \"required\" &&\r\n                  \"This field is required\"}\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"mb-3 mt-4\">\r\n              <label className=\"form-label\">Pincode</label>\r\n              <input\r\n                value={pincode}\r\n                type=\"text\"\r\n                className=\"form-control \"\r\n                placeholder=\"6 digit pincode\"\r\n                maxLength=\"6\"\r\n                minLength=\"6\"\r\n                {...register(\"Pincode\", {\r\n                  required: true,\r\n                  pattern: {\r\n                    value: /^[1-9][0-9]{5}$/,\r\n                    message: \"this should be in number format\",\r\n                  },\r\n                })}\r\n                onChange={(event) => {\r\n                  setPincode(event.target.value.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n\r\n              <div className=\"form-text text-danger\">\r\n                {errors.Pincode?.type === \"required\" &&\r\n                  \"This field is required\"}\r\n              </div>\r\n              <div className=\"form-text text-danger\">\r\n                {errors.Pincode && <div>{errors.Pincode.message}</div>}\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"mb-3 mt-4\">\r\n              <label className=\"form-label\">Telephone Number</label>\r\n\r\n              <input\r\n                value={telephone}\r\n                type=\"text\"\r\n                className=\"form-control \"\r\n                maxLength=\"10\"\r\n                minLength=\"10\"\r\n                placeholder=\"Telephone Number \"\r\n                {...register(\"Telephone\", {\r\n                  required: true,\r\n                  pattern: {\r\n                    value: /^(\\+\\d{1,3}[- ]?)?\\d{10}$/,\r\n                    message: \"this should be in 10 digit\",\r\n                  },\r\n                })}\r\n                onChange={(event) => {\r\n                  setTelephone(event.target.value);\r\n                }}\r\n              />\r\n\r\n              <div className=\"form-text text-danger\">\r\n                {errors.Telephone?.type === \"required\" && \"This field is required\"}\r\n              </div>\r\n\r\n              <div className=\"form-text text-danger\">\r\n                {errors.Telephone && <div>{errors.Telephone.message}</div>}\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"form-text text-danger\">\r\n              {errors.Telephone && <div>{errors.Telephone.message}</div>}\r\n            </div>\r\n\r\n            <div className=\"mb-3 mt-4\">\r\n              <label className=\"form-label\">Mobile Number</label>\r\n\r\n              <input\r\n                value={mobile}\r\n                type=\"text\"\r\n                className=\"form-control \"\r\n                maxLength=\"10\"\r\n                minLength=\"10\"\r\n                placeholder=\"Mobile Number\"\r\n                {...register(\"Mobile\", {\r\n                  required: true,\r\n                  pattern: {\r\n                    value: /^(\\+\\d{1,3}[- ]?)?\\d{10}$/,\r\n                    message: \"this should be in 10 digit\",\r\n                  },\r\n                })}\r\n                onChange={(event) => {\r\n                  setMobile(event.target.value.replace(/[^0-9]/g, \"\"));\r\n                }}\r\n              />\r\n              <div className=\"form-text text-danger\">\r\n                {errors.Mobile?.type === \"required\" &&\r\n                  \"This field is required\"}\r\n              </div>\r\n              <div className=\"form-text text-danger\">\r\n                {errors.Mobile && <div>{errors.Mobile.message}</div>}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mb-3 mt-4\">\r\n              <label className=\"form-label\">Contact Person</label>\r\n\r\n              <input\r\n                value={contactPerson}\r\n                type=\"text\"\r\n                className=\"form-control \"\r\n                placeholder=\"Conatct person\"\r\n                {...register(\"Conatactperson\", {\r\n                  required: true,\r\n                  pattern: {\r\n                    value: /^[A-Za-z\\s]+$/i,\r\n                    message: \"this should be in string format\",\r\n                  },\r\n                })}\r\n                onChange={(event) => {\r\n                  setContactPerson(event.target.value.replace(/[^A-Za-z\\s]/g, \"\"));\r\n                }}\r\n              />\r\n\r\n              <div className=\"form-text text-danger\">\r\n                {errors.Conatactperson && (\r\n                  <span>{errors.Conatactperson.message}</span>\r\n                )}\r\n\r\n                {errors.Conatactperson?.type === \"required\" &&\r\n                  \"This field is required\"}\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-outline-success btn-block\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        \r\n            </div>\r\n          <div className=\"col-3 \"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateSchool;","import { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Axios from \"axios\";\r\n\r\nconst EditSchool = () => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [pincode, setPincode] = useState(\"\");\r\n  const [telephone, setTelephone] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [contactPerson, setContactPerson] = useState(\"\");\r\n\r\n  const [isName, setIsName] = useState(true)\r\n  const [isAddress, setIsAddress] = useState(true)\r\n  const [isPincode, setIsPincode] = useState(true)\r\n  const [isTelephone, setIsTelephone] = useState(true)\r\n  const [isMobile, setIsMobile] = useState(true)\r\n  const [isContactPerson, setIsContactPerson] = useState(true)\r\n  \r\n  const isEmpty = (value) => value.trim() === '';\r\n\r\n  useEffect(() => {\r\n\r\n    Axios.get(\"https://school-management-free-app.herokuapp.com/getdata/\" + id).then((res) => {\r\n      setName(res.data[0].V_School_Name);\r\n      setAddress(res.data[0].V_School_Address);\r\n      setPincode(res.data[0].N_School_Pincode);\r\n      setTelephone(res.data[0].N_School_Telephone_Number);\r\n      setMobile(res.data[0].N_School_Mobile_Number);\r\n      setContactPerson(res.data[0].V_School_Contact_Person);\r\n    });\r\n\r\n  }, [id]);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues : {\r\n      Schoolname : name\r\n    }\r\n  });\r\n\r\n  const FormSubmitHandler = () => {\r\n\r\n    if(isEmpty(name)){ setIsName(false); return} else{ setIsName(true) }\r\n    if(isEmpty(address)){ setIsAddress(false); return} else{ setIsAddress(true) }\r\n    if(isEmpty(String(pincode))){ setIsPincode(false); return} else{ setIsPincode(true) }\r\n    if(isEmpty(String(telephone))){ setIsTelephone(false); return} else{ setIsTelephone(true) }\r\n    if(isEmpty(String(mobile))){ setIsMobile(false); return} else{ setIsMobile(true) }\r\n    if(isEmpty(contactPerson)){ setIsContactPerson(false); return} else{ setIsContactPerson(true) }\r\n\r\n    \r\n    const SchoolData = {\r\n      V_School_Name: name,\r\n      V_School_Address: address,\r\n      N_School_Pincode: pincode,\r\n      N_School_Telephone_Number: telephone,\r\n      N_School_Mobile_Number: mobile,\r\n      V_School_Contact_Person: contactPerson,\r\n    };\r\n\r\n    console.log(SchoolData)\r\n    Axios.put(\"https://school-management-free-app.herokuapp.com/updatedata/\" + id, SchoolData).then(\r\n      (response) => {\r\n        alert(\"Data Updated\");\r\n        history.replace(\"/\");\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n          <div className=\"col-6\">\r\n            <h2 style={{ textAlign: \"center\" }}>EDIT School</h2>\r\n\r\n            <form onSubmit={handleSubmit(FormSubmitHandler)}>\r\n              \r\n              {/* School Name */}\r\n              <div className=\"mt-3\">\r\n                <label className=\"form-label\">School Name</label>\r\n                \r\n                <input\r\n                  value={name}\r\n                  type=\"text\"\r\n                  className=\"form-control \"\r\n                  placeholder=\"School Name\"\r\n                  {...register(\"Schoolname\", {\r\n                    required: false,\r\n                    pattern: {\r\n                      value: /^[A-Za-z\\s]+$/i,\r\n                      message: \"this should be in string format\",\r\n                    },\r\n                    minLength: {\r\n                      value: 3,\r\n                      message: 'Minimum length is 3' \r\n                    }\r\n\r\n                  })\r\n                  \r\n                }\r\n                  onChange={(event) => {\r\n                    setName(event.target.value.replace(/[^A-Za-z\\s]/g, \"\"));\r\n                  }}\r\n                />\r\n                \r\n                {/* School Name Error Handel*/}\r\n                <div className=\"form-text text-danger\">\r\n\r\n                  {errors.Schoolname?.type === \"pattern\" &&\r\n                    <span>{errors.Schoolname.message}</span>}\r\n\r\n                  {errors.Schoolname?.type === \"minLength\" &&\r\n                    <span>{errors.Schoolname.message}</span>}\r\n\r\n                  {!isName && <span>Name Should Not be Empty</span>}\r\n                    \r\n                </div>\r\n\r\n              </div>\r\n              {/* End School Name */}\r\n\r\n              {/* School Address */}\r\n\r\n              <div className=\"mb-3 mt-4\">\r\n                <label className=\"form-label\">School Address</label>\r\n\r\n                <input\r\n                  value={address}\r\n                  type=\"text\"\r\n                  className=\"form-control \"\r\n                  placeholder=\"address\"\r\n                  {...register(\"Address\", {\r\n                    required: false,\r\n                    pattern: {\r\n                      value: /^[#.0-9a-zA-Z\\s,-]+$/,\r\n                      message: \"this should be in string format\",\r\n                    },\r\n                  })}\r\n                  onChange={(event) => {\r\n                    setAddress(event.target.value);\r\n                  }}\r\n                />\r\n                {/* School Address Error Handler */}\r\n                <div className=\"form-text text-danger\">\r\n\r\n                  {errors.Address?.type === \"pattern\" &&\r\n                      <span>{errors.Address.message}</span>}\r\n\r\n                      {!isAddress && <span>Address Should Not be Empty</span>}\r\n                </div>\r\n\r\n              </div>\r\n              {/* End School Address */}\r\n\r\n              {/* School Pincode */}\r\n              <div className=\"mb-3 mt-4\">\r\n                <label className=\"form-label\">Pincode</label>\r\n                <input\r\n                  value={pincode}\r\n                  type=\"text\"\r\n                  className=\"form-control \"\r\n                  placeholder=\"6 digit pincode\"\r\n                  maxLength=\"6\"\r\n                  minLength=\"6\"\r\n                  {...register(\"Pincode\", {\r\n                    required: false,\r\n                    pattern: {\r\n                      value: /^[1-9][0-9]{5}$/,\r\n                      message: \"this should be in number format\",\r\n                    },\r\n                  })}\r\n                  onChange={(event) => {\r\n                    setPincode(event.target.value.replace(/[^0-9]/g, \"\"));\r\n                  }}\r\n                />\r\n\r\n                {/* Pincode Error */}\r\n                <div className=\"form-text text-danger\">\r\n                  {errors.Pincode?.type === \"pattern\" &&\r\n                    <span>{errors.Pincode.message}</span>}\r\n\r\n                  {!isPincode && <span>Pincode Should Not be Empty</span>}\r\n                </div>\r\n\r\n              </div>\r\n              {/* End Pincode */}\r\n\r\n              {/* Telephone */}\r\n              <div className=\"mb-3 mt-4\">\r\n                <label className=\"form-label\">Telephone Number</label>\r\n\r\n                <input\r\n                  value={telephone}\r\n                  type=\"text\"\r\n                  className=\"form-control \"\r\n                  maxLength=\"10\"\r\n                  minLength=\"10\"\r\n                  placeholder=\"Telephone Number \"\r\n                  {...register(\"Telephone\", {\r\n                    required: false,\r\n                    pattern: {\r\n                      value: /^(\\+\\d{1,3}[- ]?)?\\d{10}$/,\r\n                      message: \"this should be in 10 digit\",\r\n                    },\r\n                  })}\r\n                  onChange={(event) => {\r\n                    setTelephone(event.target.value);\r\n                  }}\r\n                />\r\n\r\n                {/* Telephone Error */}\r\n                <div className=\"form-text text-danger\">\r\n                  {errors.Telephone?.type === \"pattern\" &&\r\n                    <span>{errors.Telephone.message}</span>}\r\n                  \r\n                  {!isTelephone && <span>Telephone Should Not be Empty</span>}\r\n                </div>\r\n              </div>\r\n              {/* End Telephone */}\r\n\r\n              {/* Mobile */}\r\n              <div className=\"mb-3 mt-4\">\r\n                <label className=\"form-label\">Mobile Number</label>\r\n\r\n                <input\r\n                  value={mobile}\r\n                  type=\"text\"\r\n                  className=\"form-control \"\r\n                  maxLength=\"10\"\r\n                  minLength=\"10\"\r\n                  placeholder=\"Mobile Number\"\r\n                  {...register(\"Mobile\", {\r\n                    required: false,\r\n                    pattern: {\r\n                      value: /^(\\+\\d{1,3}[- ]?)?\\d{10}$/,\r\n                      message: \"this should be in 10 digit\",\r\n                    },\r\n                  })}\r\n                  onChange={(event) => {\r\n                    setMobile(event.target.value.replace(/[^0-9]/g, \"\"));\r\n                  }}\r\n                />\r\n\r\n                {/* Error in Mobile */}\r\n                <div className=\"form-text text-danger\">\r\n                  {errors.Mobile?.type === \"pattern\" &&\r\n                    <span>{errors.Mobile.message}</span>}\r\n                  \r\n                  {!isMobile && <span>Mobile Should Not be Empty</span>}\r\n                </div>\r\n              </div>\r\n              {/* End Mobile */}\r\n\r\n              {/* Contact Person */}\r\n              <div className=\"mb-3 mt-4\">\r\n                <label className=\"form-label\">Contact Person</label>\r\n\r\n                <input\r\n                  value={contactPerson}\r\n                  type=\"text\"\r\n                  className=\"form-control \"\r\n                  placeholder=\"Conatct person\"\r\n                  {...register(\"Conatactperson\", {\r\n                    required: false,\r\n                    pattern: {\r\n                      value: /^[A-Za-z\\s]+$/i,\r\n                      message: \"this should be in string format\",\r\n                    },\r\n                  })}\r\n                  onChange={(event) => {\r\n                    setContactPerson(\r\n                      event.target.value.replace(/[^A-Za-z\\s]/g, \"\")\r\n                    );\r\n                  }}\r\n                />\r\n                {/* Error in Contact Person */}\r\n                <div className=\"form-text text-danger\">\r\n                  {errors.Contactperson?.type === \"pattern\" &&\r\n                    <span>{errors.Contactperson.message}</span>}\r\n                  \r\n                  {!isContactPerson && <span>Contact Person Should Not be Empty</span>}\r\n                </div>\r\n              </div>\r\n              {/* End Contact Person */}\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-success btn-block\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-3 \"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditSchool;\r\n","import React from \"react\";\r\nimport { Link ,NavLink} from \"react-router-dom\";\r\n\r\nconst NavLinks = () => {\r\n  return (\r\n    <>\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-success\">\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        School\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" exact to=\"/\">\r\n              School List\r\n            </NavLink>\r\n          </li>\r\n         \r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" exact to=\"/createschool\">\r\n              Create School\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" exact to=\"/createschooldetail\">\r\n              Create School Details\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n     \r\n    </div>\r\n  </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import { useState } from \"react\";\r\n//import { useHistory } from \"react-router-dom\";\r\n\r\n//import Axios from \"axios\";\r\n\r\nconst CreateSchoolDetail = () => {\r\n  const [schoolName, setSchoolName] = useState(\"\");\r\n  const [pincode, setPincode] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  //const [dataList, setDataList] = useState([]);\r\n\r\n  const FormSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n          <div className=\"col-6\">\r\n            <h2 style={{ textAlign: \"center\" }}>School Details</h2>\r\n\r\n            <form onSubmit={FormSubmitHandler}>\r\n              <div className=\" mt-3\">\r\n                <label className=\"form-label\">School Name</label>\r\n\r\n                <input\r\n                  value={schoolName}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"School Name\"\r\n                  required\r\n                  onChange={(event) => {\r\n                    setSchoolName(event.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mb-3 mt-4\">\r\n                <label className=\"form-label\">Pincode</label>\r\n                <input\r\n                  \r\n                  value={pincode}\r\n                  type=\"number\"\r\n                  className=\"form-control \"\r\n                  placeholder=\"6 digit pincode\"\r\n                  required\r\n                  onChange={(event) => {\r\n                    setPincode(event.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mb-3 mt-4\">\r\n                <label className=\"form-label\">Country</label>\r\n                <input\r\n                  value={country}\r\n                  type=\"text\"\r\n                  className=\"form-control \"\r\n                  placeholder=\"country\"\r\n                  onChange={(event) => {\r\n                    setCountry(event.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3 mt-4\">\r\n                <label className=\"form-label\">State</label>\r\n                <input\r\n                  value={state}\r\n                  type=\"text\"\r\n                  className=\"form-control \"\r\n                  placeholder=\"states\"\r\n                  onChange={(event) => {\r\n                    setState(event.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3 mt-4\">\r\n                <label className=\"form-label\">City</label>\r\n                <input\r\n                  value={city}\r\n                  type=\"text\"\r\n                  className=\"form-control \"\r\n                  placeholder=\"city\"\r\n                  onChange={(event) => {\r\n                    setCity(event.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3 mt-4\">\r\n                <label className=\"form-label\">Address</label>\r\n                <input\r\n                  value={address}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"H.No.932,Address Name\"\r\n                  onChange={(event) => {\r\n                    setAddress(event.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <label className=\"form-label\">Mobile Number</label>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-1\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value=\"+91\"\r\n                    className=\"form-control\"\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-11\">\r\n                  <input\r\n                    value={mobile}\r\n                    type=\"number\"\r\n                    className=\"form-control \"\r\n                    placeholder=\"Mobile Number\"\r\n                    required\r\n                    onChange={(event) => {\r\n                      setMobile(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-3 mt-2\">\r\n                <label className=\"form-label\">Board</label>\r\n                <select className=\"form-control\">\r\n                  <option>Select The Board</option>\r\n                  <option>STATE BOARD</option>\r\n                  <option>CSBE BOARD</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"mb-3 mt-4\">\r\n                <label className=\"form-label\">No. of Classes</label>\r\n                <select className=\"form-control\">\r\n                  <option>Class 1</option>\r\n                  <option>Class 2</option>\r\n                  <option>Class 3</option>\r\n                </select>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-success btn-block\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-3\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateSchoolDetail;\r\n","import SchoolList from \"./components/SchoolList\";\nimport CreateSchool from \"./components/CreateSchool\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport EditSchool from \"./components/EditSchool\";\nimport NavLinks from \"./components/NavLinks\";\nimport CreateSchoolDetail from \"./components/CreateSchoolDetail\";\n\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <NavLinks />\n        <Switch>\n          <Route exact path='/' > <SchoolList /> </Route>\n          <Route exact path='/createschool' ><CreateSchool /> </Route>\n          <Route exact path='/createschooldetail' ><CreateSchoolDetail /> </Route>\n          <Route exact path='/editschool/:id' ><EditSchool /> </Route>\n          <Route exact path='/editschool/:id' ><EditSchool /> </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}